{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/user-details/user-details.component.css","webpack:///./src/app/components/user-details/user-details.component.html","webpack:///./src/app/components/user-details/user-details.component.ts","webpack:///./src/app/components/users/users.component.css","webpack:///./src/app/components/users/users.component.html","webpack:///./src/app/components/users/users.component.ts","webpack:///./src/app/containers/user/user.component.css","webpack:///./src/app/containers/user/user.component.html","webpack:///./src/app/containers/user/user.component.ts","webpack:///./src/app/containers/users/users.component.css","webpack:///./src/app/containers/users/users.component.html","webpack:///./src/app/containers/users/users.component.ts","webpack:///./src/app/services/config.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/store/actions/config.actions.ts","webpack:///./src/app/store/actions/user.actions.ts","webpack:///./src/app/store/effects/config.effects.ts","webpack:///./src/app/store/effects/user.effects.ts","webpack:///./src/app/store/reducers/app.reducers.ts","webpack:///./src/app/store/reducers/config.reducers.ts","webpack:///./src/app/store/reducers/user.reducers.ts","webpack:///./src/app/store/selectors/config.selector.ts","webpack:///./src/app/store/selectors/user.selector.ts","webpack:///./src/app/store/state/config.state.ts","webpack:///./src/app/store/state/user.state.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { UsersComponent } from './containers/users/users.component';\nimport { UserComponent } from './containers/user/user.component';\n\nconst routes: Routes = [\n  { path: 'users', component: UsersComponent },\n  { path: 'user/:id', component: UserComponent },\n  { path: '', redirectTo: '/users', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar d-flex\\\">\\n  <a class=\\\"navbar-brand\\\"\\n    routerLink=\\\"/\\\">\\n    Angular - NGRX / {{ (config$ | async)?.adminName }}\\n  </a>\\n  <div class=\\\"d-flex justify-content-end\\\">\\n    <ul class=\\\"d-flex navbar-nav flex-row align-items-center\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"/users\\\"\\n          routerLinkActive=\\\"active\\\">Users</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<div class=\\\"container app-container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { IAppState } from './store/state/app.state';\nimport { GetConfig } from './store/actions/config.actions';\nimport { selectConfig } from './store/selectors/config.selector';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'angular-ngrx';\n  config$ = this._store.pipe(select(selectConfig));\n\n  constructor(private _store: Store<IAppState>) {}\n\n  ngOnInit() {\n    this._store.dispatch(new GetConfig());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreModule } from '@ngrx/store';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\n\nimport { appReducers } from './store/reducers/app.reducers';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ConfigEffects } from './store/effects/config.effects';\nimport { UserEffects } from './store/effects/user.effects';\nimport { AppComponent } from './app.component';\nimport { UserService } from './services/user.service';\nimport { UsersComponent as UsersContainerComponent } from './containers/users/users.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { UserComponent } from './containers/user/user.component';\nimport { UserDetailsComponent } from './components/user-details/user-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersContainerComponent,\n    UsersComponent,\n    UserComponent,\n    UserDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    StoreModule.forRoot(appReducers),\n    EffectsModule.forRoot([UserEffects, ConfigEffects]),\n    StoreRouterConnectingModule.forRoot({ stateKey: 'router' }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    AppRoutingModule\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\"","module.exports = \"<div>\\n  <p>\\n    Name: {{ user.name }}\\n  </p>\\n  <p>\\n    Card Number: {{ user.cardNumber }}\\n  </p>\\n  <p>\\n    Card Type: {{ user.cardType }}\\n  </p>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { IUser } from '../../models/user.interface';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n  @Input()\n  user: IUser;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table table-hover\\\">\\n  <thead class=\\\"thead-dark\\\">\\n    <tr>\\n      <th scope=\\\"col\\\">#</th>\\n      <th scope=\\\"col\\\">Name</th>\\n      <th scope=\\\"col\\\">Card Number</th>\\n      <th scope=\\\"col\\\">Card Type</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let user of users\\\"\\n      (click)=\\\"navigateToUser(user.id)\\\">\\n      <td>{{ user.id }}</td>\\n      <td>{{ user.name }}</td>\\n      <td>{{ user.cardNumber }}</td>\\n      <td>{{ user.cardType }}</td>\\n    </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { IUser } from '../../models/user.interface';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  @Input()\n  users: IUser[];\n  @Output()\n  userSelected: EventEmitter<number> = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  navigateToUser(id: number) {\n    this.userSelected.emit(id);\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-user-details [user]=\\\"user$ | async\\\"></app-user-details>\"","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { IAppState } from '../../store/state/app.state';\nimport { selectSelectedUser } from '../../store/selectors/user.selector';\nimport { GetUser } from '../../store/actions/user.actions';\n\n@Component({\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  user$ = this._store.pipe(select(selectSelectedUser));\n\n  constructor(\n    private _store: Store<IAppState>,\n    private _route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this._store.dispatch(new GetUser(this._route.snapshot.params.id));\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-users [users]=\\\"users$ | async\\\"\\n  (userSelected)=\\\"navigateToUser($event)\\\"></app-users>\"","import { GetUsers } from './../../store/actions/user.actions';\nimport { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { IAppState } from '../../store/state/app.state';\nimport { selectUserList } from '../../store/selectors/user.selector';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  users$ = this._store.pipe(select(selectUserList));\n\n  constructor(private _store: Store<IAppState>, private _router: Router) {}\n\n  ngOnInit() {\n    this._store.dispatch(new GetUsers());\n  }\n\n  navigateToUser(id: number) {\n    this._router.navigate(['user', id]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { IConfig } from '../models/config.interface';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  configUrl = `${environment.apiUrl}config.json`;\n\n  constructor(private _http: HttpClient) { }\n\n  getConfig(): Observable<IConfig> {\n    return this._http.get<IConfig>(this.configUrl);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { IUserHttp } from '../models/http-models/user-http.interface';\n\n@Injectable()\nexport class UserService {\n  usersUrl = `${environment.apiUrl}users.json`;\n\n  constructor(private _http: HttpClient) { }\n\n  getUsers(): Observable<IUserHttp> {\n    return this._http.get<IUserHttp>(this.usersUrl);\n  }\n}\n","import { Action } from '@ngrx/store';\n\nimport { IConfig } from '../../models/config.interface';\n\nexport enum EConfigActions {\n  GetConfig = '[Config] Get Config',\n  GetConfigSuccess = '[Config] Get Config Success'\n}\n\nexport class GetConfig implements Action {\n  public readonly type = EConfigActions.GetConfig;\n}\n\nexport class GetConfigSuccess implements Action {\n  public readonly type = EConfigActions.GetConfigSuccess;\n  constructor(public payload: IConfig) {}\n}\n\nexport type ConfigActions =\n  | GetConfig\n  | GetConfigSuccess;\n\n","import { Action } from '@ngrx/store';\n\nimport { IUser } from '../../models/user.interface';\n\nexport enum EUserActions {\n  GetUsers = '[User] Get Users',\n  GetUsersSuccess = '[User] Get Users Success',\n  GetUser = '[User] Get User',\n  GetUserSuccess = '[User] Get User Success'\n}\n\nexport class GetUsers implements Action {\n  public readonly type = EUserActions.GetUsers;\n}\n\nexport class GetUsersSuccess implements Action {\n  public readonly type = EUserActions.GetUsersSuccess;\n  constructor(public payload: IUser[]) {}\n}\n\nexport class GetUser implements Action {\n  public readonly type = EUserActions.GetUser;\n  constructor(public payload: number) {}\n}\n\nexport class GetUserSuccess implements Action {\n  public readonly type = EUserActions.GetUserSuccess;\n  constructor(public payload: IUser) {}\n}\n\nexport type UserActions = GetUsers | GetUsersSuccess | GetUser | GetUserSuccess;\n","\nimport { Injectable } from '@angular/core';\nimport { Effect, ofType, Actions } from '@ngrx/effects';\nimport { switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { IConfig } from '../../models/config.interface';\nimport { ConfigService } from './../../services/config.service';\nimport { EConfigActions, GetConfig, GetConfigSuccess } from '../actions/config.actions';\n\n@Injectable()\nexport class ConfigEffects {\n  @Effect()\n  getConfig$ = this._actions$.pipe(\n    ofType<GetConfig>(EConfigActions.GetConfig),\n    switchMap(() => this._configService.getConfig()),\n    switchMap((config: IConfig) => {\n      return of(new GetConfigSuccess(config));\n    })\n  );\n\n  constructor(\n    private _configService: ConfigService,\n    private _actions$: Actions) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Effect, ofType, Actions } from '@ngrx/effects';\nimport { Store, select } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { switchMap, map, withLatestFrom } from 'rxjs/operators';\n\nimport { IAppState } from '../state/app.state';\nimport {\n  GetUsersSuccess,\n  EUserActions,\n  GetUserSuccess,\n  GetUser,\n  GetUsers\n} from '../actions/user.actions';\nimport { UserService } from '../../services/user.service';\nimport { IUserHttp } from '../../models/http-models/user-http.interface';\nimport { selectUserList } from '../selectors/user.selector';\n\n@Injectable()\nexport class UserEffects {\n  @Effect()\n  getUser$ = this._actions$.pipe(\n    ofType<GetUser>(EUserActions.GetUser),\n    map(action => action.payload),\n    withLatestFrom(this._store.pipe(select(selectUserList))),\n    switchMap(([id, users]) => {\n      const selectedUser = users.filter(user => user.id === +id)[0];\n      return of(new GetUserSuccess(selectedUser));\n    })\n  );\n\n  @Effect()\n  getUsers$ = this._actions$.pipe(\n    ofType<GetUsers>(EUserActions.GetUsers),\n    switchMap(() => this._userService.getUsers()),\n    switchMap((userHttp: IUserHttp) => of(new GetUsersSuccess(userHttp.users)))\n  );\n\n  constructor(\n    private _userService: UserService,\n    private _actions$: Actions,\n    private _store: Store<IAppState>\n  ) {}\n}\n","import { ActionReducerMap } from '@ngrx/store';\n\nimport { routerReducer } from '@ngrx/router-store';\nimport { IAppState } from '../state/app.state';\nimport { configReducers } from './config.reducers';\nimport { userReducers } from './user.reducers';\n\nexport const appReducers: ActionReducerMap<IAppState, any> = {\n  router: routerReducer,\n  users: userReducers,\n  config: configReducers\n};\n","import { ConfigActions, EConfigActions } from '../actions/config.actions';\nimport { initialConfigState, IConfigState } from './../state/config.state';\n\nexport const configReducers = (\n  state = initialConfigState,\n  action: ConfigActions\n): IConfigState => {\n  switch (action.type) {\n    case EConfigActions.GetConfigSuccess: {\n      return {\n        ...state,\n        config: action.payload\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { EUserActions } from './../actions/user.actions';\nimport { UserActions } from '../actions/user.actions';\nimport { initialUserState, IUserState } from '../state/user.state';\n\nexport const userReducers = (\n  state = initialUserState,\n  action: UserActions\n): IUserState => {\n  switch (action.type) {\n    case EUserActions.GetUsersSuccess: {\n      return {\n        ...state,\n        users: action.payload\n      };\n    }\n    case EUserActions.GetUserSuccess: {\n      return {\n        ...state,\n        selectedUser: action.payload\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { createSelector } from '@ngrx/store';\n\nimport { IAppState } from '../state/app.state';\nimport { IConfigState } from '../state/config.state';\n\nconst configState = (state: IAppState) => state.config;\n\nexport const selectConfig = createSelector(\n  configState,\n  (state: IConfigState) => state.config\n);\n","import { createSelector } from '@ngrx/store';\n\nimport { IAppState } from '../state/app.state';\nimport { IUserState } from '../state/user.state';\n\nconst selectUsers = (state: IAppState) => state.users;\n\nexport const selectUserList = createSelector(\n  selectUsers,\n  (state: IUserState) => state.users\n);\n\nexport const selectSelectedUser = createSelector(\n  selectUsers,\n  (state: IUserState) => state.selectedUser\n);\n","import { IConfig } from '../../models/config.interface';\n\n\nexport interface IConfigState {\n  config: IConfig;\n}\n\nexport const initialConfigState: IConfigState = {\n  config: null\n};\n","import { IUser } from '../../models/user.interface';\n\nexport interface IUserState {\n  users: IUser[];\n  selectedUser: IUser;\n}\n\nexport const initialUserState: IUserState = {\n  users: null,\n  selectedUser: null\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4200/assets/data/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}